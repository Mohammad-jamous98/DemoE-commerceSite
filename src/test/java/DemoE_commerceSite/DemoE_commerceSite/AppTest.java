package DemoE_commerceSite.DemoE_commerceSite;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.time.Duration;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.List;
import java.util.Random;
import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.Select;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.Assert;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

public class AppTest extends MySetup {

	@BeforeTest
	public void Setup() throws SQLException {

		SetUp();
	}

	@Test(priority = 1, enabled = false)
	public void signin() throws SQLException, InterruptedException {
		driver.findElement(By.linkText("Sign in")).click();
		driver.findElement(By.cssSelector("[data-test='register-link']")).click();

		String query = "SELECT * FROM customers WHERE customerNumber = 555;";
		stmt = con.createStatement();
		rs = stmt.executeQuery(query);

		while (rs.next()) {
			customerNumber = rs.getInt("customerNumber");
			customerName = rs.getString("contactLastName");
			contactFirstName = rs.getString("contactFirstName").trim();
			dateOfBirth = rs.getDate("date_of_birth").toLocalDate();
			addressLine = rs.getString("addressLine1");
			PostalCode = rs.getString("postalCode");
			City = rs.getString("city");
			State = rs.getString("state");
			PhoneNumber = rs.getString("phone");
			countryFromDb = rs.getString("country");
			email = customerName + contactFirstName + "@gmail.com";
			password = "@12345HelmyJ@mous";
		}

		DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd");
		String formattedDate = dateOfBirth.format(formatter);

		driver.findElement(By.id("first_name")).sendKeys(customerName);
		driver.findElement(By.id("last_name")).sendKeys(contactFirstName);
		driver.findElement(By.id("email")).sendKeys(email);
		driver.findElement(By.id("password")).sendKeys(password);
		Thread.sleep(1000);

		// This code generated by chatGpt to help bring the correct date format
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("document.getElementById('dob').value='" + formattedDate + "';");

		driver.findElement(By.id("street")).sendKeys(addressLine);
		driver.findElement(By.id("postal_code")).sendKeys(PostalCode);
		driver.findElement(By.id("city")).sendKeys(City);
		driver.findElement(By.id("state")).sendKeys(State);

		// to bring the name of country as in DataBase when the website using 'select'
		String script = "var select = document.getElementById('country');" + "var found = false;"
				+ "for (var i = 0; i < select.options.length; i++) {"
				+ "  if (select.options[i].text.trim().toLowerCase() === '" + countryFromDb.toLowerCase() + "') {"
				+ "    select.selectedIndex = i;" + "    select.dispatchEvent(new Event('change'));"
				+ "    found = true;" + "    break;" + "  }" + "}" + "if (!found) console.warn('ðŸš¨ Ø§Ù„Ø¯ÙˆÙ„Ø© ØºÙŠØ± Ù…ÙˆØ¬ÙˆØ¯Ø©: "
				+ countryFromDb + "');";

		js.executeScript(script);

		driver.findElement(By.id("phone")).sendKeys(PhoneNumber);

		driver.findElement(By.cssSelector(".btnSubmit.mb-3")).click();

	}

	@Test(priority = 2, enabled = true)
	public void Login() throws SQLException, InterruptedException {
		driver.findElement(By.linkText("Sign in")).click();

		String query = "SELECT * FROM customers WHERE customerNumber = 555;";
		stmt = con.createStatement();
		rs = stmt.executeQuery(query);

		while (rs.next()) {

			customerName = rs.getString("contactLastName");
			contactFirstName = rs.getString("contactFirstName").trim();
			email = customerName + contactFirstName + "@gmail.com";
			password = "@12345HelmyJ@mous";
		}

		driver.findElement(By.id("email")).sendKeys(email);
		driver.findElement(By.id("password")).sendKeys(password);

		driver.findElement(By.cssSelector("[data-test='login-submit']")).click();

		Thread.sleep(2000);

	}

	@Test(priority = 3, enabled = true)
	public void productsearch() throws InterruptedException {

		driver.findElement(By.linkText("Home")).click();

		WebElement Autofillinput = driver.findElement(By.id("search-query"));

		int RandomIndex = Rand.nextInt(product.length);

		Autofillinput.sendKeys(product[RandomIndex]);

		Thread.sleep(1000);

		driver.findElement(By.cssSelector("[data-test='search-submit']")).click();

	}

	@Test(priority = 4, enabled = true)
	public void AddRandomProductsToCart() throws InterruptedException {
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(7));

		while (addedCount < productsToAdd && tryCount < 10) {
			driver.get("https://practicesoftwaretesting.com/");

			List<WebElement> productImages = driver.findElements(By.cssSelector("img.card-img-top"));
			int randomIndex = new Random().nextInt(productImages.size());

			WebElement product = productImages.get(randomIndex);
			String productName = product.getAttribute("alt");

			product.click();
			Thread.sleep(1000);
			// check if product "Out of Stock"
			List<WebElement> outOfStock = driver.findElements(By.cssSelector("p[data-test='out-of-stock']"));
			if (!outOfStock.isEmpty()) {
				tryCount++;
				continue;
			}

			// Add Product
			WebElement addToCartBtn = wait
					.until(ExpectedConditions.elementToBeClickable(By.cssSelector("[data-test='add-to-cart']")));
			addToCartBtn.click();

			// make sure the toast message disapear
			wait.until(ExpectedConditions.invisibilityOfElementLocated(By.cssSelector(".toast-message")));

			addedCount++;
			Thread.sleep(1000);
		}

		if (addedCount < productsToAdd) {
			Assert.fail("Product Not Found");
		}

		// Make sure the cart will click on it after toast diapear
		WebElement cartIcon = wait
				.until(ExpectedConditions.elementToBeClickable(By.cssSelector("a[data-test='nav-cart']")));
		cartIcon.click();

		Thread.sleep(1000);
	}

	@Test(priority = 5, enabled = true)
	public void proceedToCheckout() throws InterruptedException, SQLException {
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

		// this one to click on proceed to checkout
		WebElement proceedBtn = wait
				.until(ExpectedConditions.elementToBeClickable(By.cssSelector("[data-test='proceed-1']")));

		// to click on
		proceedBtn.click();

		// !-----------------------------------------------------------------------------!

		// this one to fill the email and password after proceed

		String query = "SELECT * FROM customers WHERE customerNumber = 555;";
		stmt = con.createStatement();
		rs = stmt.executeQuery(query);

		while (rs.next()) {

			customerName = rs.getString("contactLastName");
			contactFirstName = rs.getString("contactFirstName").trim();
			email = customerName + contactFirstName + "@gmail.com";
			password = "@12345HelmyJ@mous";
		}

		driver.findElement(By.id("email")).sendKeys(email);
		driver.findElement(By.id("password")).sendKeys(password);

		driver.findElement(By.cssSelector("input.btnSubmit")).click();

		// !----------------------------------------------------------------------------!

		// this one to proceed to checkout
		WebElement proceedBtn1 = wait
				.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button[data-test='proceed-2']")));

		// to click on
		proceedBtn1.click();

		// !----------------------------------------------------------------------------!

		// this one to proceed to checkout
		WebElement proceedBtn2 = wait
				.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button[data-test='proceed-3']")));

		// to click on
		proceedBtn2.click();

		// !----------------------------------------------------------------------------!

		WebElement paymentMethodSelect = driver.findElement(By.tagName("select"));

		Select select = new Select(paymentMethodSelect);

		select.selectByVisibleText("Cash on Delivery");

		WebElement proceedBtn3 = wait
				.until(ExpectedConditions.elementToBeClickable(By.cssSelector("button[data-test='finish']")));

		// to click on
		proceedBtn3.click();

	}

}
